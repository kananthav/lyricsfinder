{"version":3,"sources":["context.js","components/layouts/TopBar.js","components/tracks/Lyrics.js","components/tracks/Track.js","components/tracks/Tracks.js","containers/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","track_list","header","inherits","createClass","key","value","_this2","axios","get","then","res","setState","data","message","body","catch","err","console","log","react_default","a","createElement","props","children","Component","Consumer","MenuExampleSizeTiny","activeItem","handleItemClick","e","_ref","name","Menu","size","NavLink","to","Item","color","active","position","Dropdown","item","text","Lyrics","track","lyrics","match","params","id","_this$state","Fragment","undefined","keys","Header","textAlign","react_loader_spinner_default","type","height","width","Track","colors","randomColor","Math","floor","random","genres","primary_genres","music_genre_list","map","music_genre","music_genre_name","join","Link","track_id","Card","style","margin","Content","artist_name","Meta","track_name","Description","extra","Icon","album_name","Tracks","as","marginBottom","Grid","columns","Row","Column","tracks_Track","AppContainer","Container","marginTop","tracks_Tracks","App","context_Provider","BrowserRouter","TopBar_MenuExampleSizeTiny","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03dc5d3c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    track_list: [],\n    header: \"Top 15 Indonesia\",\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=15&country=id&f_has_lyrics=1&apikey=ecef669ac8af054a844b4ef2ca923ecb`\n      )\n      .then(res => {\n        this.setState({ track_list: res.data.message.body.track_list })\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react'\nimport { Dropdown, Menu } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom';\n\nexport default class MenuExampleSizeTiny extends Component {\n  state = { activeItem: 'home' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Menu size='large'>\n        <NavLink to={'/'}>\n          <Menu.Item\n            color='blue'\n            name='home'\n            active={activeItem === 'home'}\n            /* onClick={() => ( */\n            /*   <NavLink to={'/'}></NavLink> */\n            /* )} */\n          />\n        </NavLink>\n        {/*<NavLink to={'/top-songs-id'}>\n          <Menu.Item\n            color='blue'\n            name='top_15_indonesia'\n            active={activeItem === 'top_15_indonesia'}\n            onClick={this.handleItemClick}\n          />\n        </NavLink>*/}\n\n        <Menu.Menu position='right'>\n          <Dropdown item text='Language'>\n            <Dropdown.Menu>\n              <Dropdown.Item>English</Dropdown.Item>\n              <Dropdown.Item>Indonesian</Dropdown.Item>\n              <Dropdown.Item>Spanish</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          {/*<Menu.Item>\n            <Button primary>Sign In</Button>\n          </Menu.Item>*/}\n        </Menu.Menu>\n      </Menu>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { Header } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass Lyrics extends Component {\n  state = {\n    track: {},\n    lyrics: {},\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=ecef669ac8af054a844b4ef2ca923ecb`)\n      .then(res => {\n        this.setState({ lyrics: res.data.message.body.lyrics })\n\n        return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=ecef669ac8af054a844b4ef2ca923ecb`)\n        .then(res => {\n          this.setState({ track: res.data.message.body.track })\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    const { track, lyrics } = this.state;\n    return (\n      <>\n        {track === undefined || lyrics === undefined || Object.keys(track).length === 0 || Object.keys(lyrics).length === 0 ?\n          <Header textAlign='center'>\n            <Loader \n              type='Bars'\n              color='#212121'\n              height={70}\n              width={70}\n            />\n          </Header>\n          :\n          <h1>data returned</h1>\n        }\n      </>\n    )\n  }\n}\n\nexport default Lyrics;\n","import React from 'react'\nimport { Card, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nconst Track = (props) => {\n  const colors = ['red', 'orange', 'yellow', 'blue', 'pink', 'green', 'grey', 'purple', 'teal', 'brown'];\n  const randomColor = colors[Math.floor(Math.random() * colors.length)];\n  const { track } = props;\n  console.log(track)\n  \n  const { music_genre_list } = props.track.primary_genres;\n  const genres = music_genre_list.map(item => {\n    const { music_genre_name } = item.music_genre;\n    if (music_genre_name.length !== 0) {\n      return item.music_genre.music_genre_name;\n    } else {\n      return \"Unavailable\";\n    }\n  }).join(\", \")\n\n  return (\n  <Link to={`lyrics/track/${track.track_id}`}>\n    <Card\n      style={{ margin: 'auto' }}\n      color={randomColor}\n    >\n      <Card.Content>\n        <Card.Header>{track.artist_name}</Card.Header>\n        <Card.Meta>\n          <span>{track.track_name}</span>\n        </Card.Meta>\n        <Card.Description>{genres}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='music' />\n        {track.album_name}\n      </Card.Content> \n    </Card>\n  </Link>\n  )\n}\n\nexport default Track\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport { Header, Grid } from 'semantic-ui-react';\nimport Loader from 'react-loader-spinner';\nimport Track from './Track';\n\nclass Tracks extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { track_list, header } = value;\n          return (\n            <>\n              {track_list.length === 0 || track_list === undefined ?\n                <Header textAlign='center'>\n                  <Loader \n                    type='Bars'\n                    color='#212121'\n                    height={70}\n                    width={70}\n                  />\n                </Header>\n                :\n                <>\n                  <Header as='h1' textAlign='center' style={{ marginBottom: 25 }}>{header}</Header>\n                  <Grid columns={3}>\n                    <Grid.Row>\n                      {track_list.map(item => (\n                        <Grid.Column style={{ marginBottom: 30 }} key={item.track.track_id}>\n                          <Track track={item.track} />\n                        </Grid.Column>\n                      ))}\n                    </Grid.Row>\n                  </Grid>\n                </>\n              }\n            </>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Tracks;\n","import React from 'react'\nimport { Container } from 'semantic-ui-react'\nimport Tracks from '../components/tracks/Tracks';\n\nconst AppContainer = () => (\n  <Container style={{ marginTop: '7em'}}>\n    <Tracks />\n  </Container>\n)\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\nimport TopBar from './components/layouts/TopBar';\nimport Lyrics from './components/tracks/Lyrics';\n\nimport AppContainer from './containers/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <>\n            <TopBar />\n            <Switch>\n              <Route exact path=\"/\" component={AppContainer} />\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n            </Switch>\n          </>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}